version: "3.9"

services:
  vault:
    image: vault:1.13.3
    container_name: vault
    ports:
      - "8200:8200"
    environment:
      - VAULT_DEV_ROOT_TOKEN_ID=root
      - VAULT_DEV_LISTEN_ADDRESS=0.0.0.0:8200
    cap_add:
      - IPC_LOCK
    volumes:
      - vault_data:/vault/data
      - ./vault/entrypoint.sh:/vault/entrypoint.sh
    command: ["sh", "/vault/entrypoint.sh"]
    networks:
      - devnet
    healthcheck:
      test: ["CMD", "vault", "status", "-format=json"]
      interval: 5s
      timeout: 5s
      retries: 20

  db:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: devuser
      POSTGRES_PASSWORD: devpass
      POSTGRES_DB: devdb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - devnet
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U devuser -d devdb"]
      interval: 5s
      timeout: 5s
      retries: 10

  backend:
    build: ./backend
    container_name: backend
    command: >
      sh -c "sleep 10 && uvicorn main:app --host 0.0.0.0 --port 8000 --reload"
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    depends_on:
      vault:
        condition: service_healthy
      db:
        condition: service_healthy
    environment:
      - VAULT_ADDR=http://vault:8200
      - VAULT_TOKEN=root
    networks:
      - devnet

  frontend:
    build: ./frontend
    container_name: frontend
    volumes:
      - ./frontend:/app
    ports:
      - "3000:3000"
    command: npm run dev
    depends_on:
      - backend
    networks:
      - devnet

networks:
  devnet:
    driver: bridge

volumes:
  vault_data:
  postgres_data: